{"version":3,"sources":["components/StarComponent.js","components/Restaurant.js","App.js","reportWebVitals.js","index.js"],"names":["StarComponent","value","text","color","className","style","backgroundColor","margin","Restaurant","key","name","thumb","cuisines","cost","rating","votes","Container","fluid","Row","Card","Image","src","rounded","Text","App","useState","restaurant","setRest","ratingFilter","setRatingFilter","nameFilter","setNameFilter","costFilter","setCostFilter","useEffect","getRestaurants","filteredRestaurants","filter","val","sort","a","b","fetch","method","headers","Accept","response","json","data","nearby_restaurants","handleFilterChanges","e","filterType","target","onClick","map","rest","average_cost_for_two","user_rating","aggregate_rating","R","res_id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3fef78c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst StarComponent = ({value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{ backgroundColor: '#800000', color: 'white', margin: '2px'}}\r\n                    className={\r\n                        value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ backgroundColor: '#800000', color: 'white', margin: '2px'}}\r\n                    className={\r\n                        value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ backgroundColor: '#800000', color: 'white', margin: '2px'}}\r\n                    className={\r\n                        value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ backgroundColor: '#800000', color: 'white', margin: '2px'}}\r\n                    className={\r\n                        value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ backgroundColor: '#800000', color: 'white', margin: '2px'}}\r\n                    className={\r\n                        value == 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StarComponent\r\n","import React from 'react'\r\nimport { Card, Col, Row , Container, Image} from 'react-bootstrap'\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport StarComponent from './StarComponent'\r\n\r\nimport './style.css'\r\n\r\nconst Restaurant = ({key, name, thumb, cuisines, cost , rating, votes }) => {\r\n\r\n    const ratingChanged = (newRating) => {\r\n      };\r\n\r\n\r\n\treturn (\r\n        <Container fluid className=\"res-container\">\r\n            \r\n            <Row>\r\n                <Card className='res-card' >\r\n                    <div className='inline-show'>\r\n                        <Image src={thumb} className=\"res-image\" rounded />\r\n                        <Card.Text className=\"res-name\">{name}</Card.Text>\r\n                       \r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm\">\r\n                                    <StarComponent value={rating} text={`${rating} (${votes}) delievery reviews`}/>\r\n                                \r\n                                </div>\r\n                                \r\n                            </div>\r\n                      \r\n                        <Card.Text className=\"res-cuisines\" >{cuisines}</Card.Text>\r\n                        <Card.Text className=\"res-cost\">â‚¹{cost/2} per person</Card.Text>\r\n                    </div>\r\n                </Card>\r\n            </Row>\r\n            \r\n        </Container>\r\n\r\n\t)\r\n}\r\n\r\nexport default Restaurant\r\n","import React,{ useState, useEffect } from 'react'\nimport { Row } from 'react-bootstrap';\nimport Restaurant from './components/Restaurant';\nimport './App.css'\n\n\nfunction App() {\n\n\tconst [restaurant, setRest] = useState([]);\n\tconst [ratingFilter, setRatingFilter ]= useState(\"\");\n\tconst [nameFilter, setNameFilter ]= useState(\"\");\n\tconst [costFilter, setCostFilter ]= useState(\"\");\n  \n\t\n\tuseEffect(() => {\n\t\tgetRestaurants();\n\t});\n\t\n\tuseEffect(()=> {\n\t\tlet filteredRestaurants = setRest;\n\n\t\tif(ratingFilter !== \"\" ){\n\t\t\tfilteredRestaurants = filteredRestaurants.filter(val => val.restaurant.rating.sort(function(a, b){return b-a}))\n\t\t}\n\t\tif(nameFilter !== \"\" ){\n\t\t\tfilteredRestaurants = filteredRestaurants.filter(val => val.restaurant.name === nameFilter)\n\t\t}\n\t\tif(costFilter !== \"\" ){\n\t\t\tfilteredRestaurants = filteredRestaurants.filter(val => (val.restaurant.cost/2).sort(function(a, b){return a-b}) )\n\t\t}\n\n\t\tsetRest(filteredRestaurants)\n\t},[ratingFilter, nameFilter, costFilter ])\n\t\n\tconst getRestaurants = async () => {\n\t\t\tconst response = await fetch(\n\t\t\t\t`https://developers.zomato.com/api/v2.1/geocode?lat=12.9039&lon=77.6013`, \n\t\t\t\t{\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t\t'user-key': 'f91be19c725fd96a6fb68414adc6ec34'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tconst data = await response.json();\n\t\t\tsetRest(data.nearby_restaurants);\n\t\t}\n\n\t\t\n\tconst handleFilterChanges = (e,filterType) => {\n\t\tswitch (filterType) {\n\t\t\tcase 'rating':\n\t\t\t\tsetRatingFilter(e.target.value)\n\t\t\t\tbreak;\n\t\t\tcase 'cost':\n\t\t\t\tsetCostFilter(e.target.value)\n\t\t\t\tbreak;\n\t\t\tcase 'name':\n\t\t\t\tsetNameFilter(e.target.value)\n\t\t\t\tbreak;\n\t\t\tdefault: break;\n\t\t}\n\t}\n    \n\treturn (\n\t    <div className=\"Zomato\">\n        <div className=\"buttons-align\">\n          <Row>\n            <button className=\"btn btn-small\" >{/* onChange={(e) => {handleFilterChanges(e, 'name')}} */}Filter</button>\n            <button className=\"btn btn-small\">Rating: 4.0+</button> \n            <button className=\"btn btn-small\">Safe and Hygienic</button> \n            <button className=\"btn btn-small\">Delivery Time</button>\t\n            <button className=\"btn btn-small\" onClick={(e) => {handleFilterChanges(e, 'rating')}}> {/* onClick={(e) => {handleFilterChanges(e, 'rating')}} */}Rating</button> \n            <button className=\"btn btn-small\" onClick={(e) => {handleFilterChanges(e, 'cost')}}>{/* onClick={(e) => {handleFilterChanges(e, 'cost')}} */}Cost</button>            \n          </Row>\n        </div>\n\t  \t\t<h2>Restaurants near you:</h2>\n        <div>\n        {restaurant.map(rest => (\n\t\t\t\t<Restaurant\n\t\t\t\t\tkey = {rest.restaurant.R.res_id}\n\t\t\t\t\tname = {rest.restaurant.name}\n\t\t\t\t\tthumb = {rest.restaurant.thumb}\n\t\t\t\t\tcuisines = {rest.restaurant.cuisines}\n\t\t\t\t\tcost = {rest.restaurant.average_cost_for_two}\n\t\t\t\t\trating = {rest.restaurant.user_rating.aggregate_rating}\n\t\t\t\t\tvotes = {rest.restaurant.user_rating.votes}\n\t\t\t\t  />\t  \n\t\t\t  ))}\n        </div>\n\t    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}